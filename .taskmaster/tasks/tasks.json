{
  "master": {
    "tasks": [
      {
        "id": "1",
        "title": "Display Detection and Mode Management",
        "description": "Test display detection on Windows/Linux/macOS and verify mode switching between dev-mode and gui-mode",
        "details": "Test display detection across platforms, verify mode switching mechanisms, test fallback when display unavailable, validate environment variable control",
        "status": "pending",
        "priority": "high",
        "dependencies": [],
        "testStrategy": "DEV Mode: headless detection testing, DUAL Mode: mode switching validation, GUI Mode: display availability verification",
        "subtasks": []
      },
      {
        "id": "2",
        "title": "MainWindow Adapter Testing",
        "description": "Test window state synchronization and action execution in headless mode",
        "details": "Test window state sync, verify action execution without Qt, test model initialization, validate UI definition generation, test state persistence and recovery",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "1"
        ],
        "testStrategy": "DEV Mode: headless window operations, DUAL Mode: state synchronization validation, GUI Mode: full window functionality",
        "subtasks": []
      },
      {
        "id": "3",
        "title": "Image Processing in Headless Mode",
        "description": "Load and process images without display server dependency",
        "details": "Load/process images without display, test zoom/pan programmatically, verify overlay rendering in virtual mode, test coordinate transformations, validate minimap functionality",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "2"
        ],
        "testStrategy": "DEV Mode: virtual image processing, DUAL Mode: processing result comparison, GUI Mode: visual verification",
        "subtasks": []
      },
      {
        "id": "4",
        "title": "CSV Data Processing Stability",
        "description": "Test CSV parsing without UI and verify data validation in headless mode",
        "details": "Test CSV parsing without UI, verify data validation in headless, test selection operations programmatically, validate expression filtering, test batch processing",
        "status": "pending",
        "priority": "high",
        "dependencies": [],
        "testStrategy": "DEV Mode: headless CSV processing, DUAL Mode: parsing result validation, GUI Mode: interactive data handling",
        "subtasks": []
      },
      {
        "id": "5",
        "title": "Selection Management Testing",
        "description": "Test selection creation/modification and verify color assignment logic",
        "details": "Test selection creation/modification, verify color assignment logic, test well plate assignments, validate selection persistence, test multi-selection operations",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "3",
          "4"
        ],
        "testStrategy": "DEV Mode: programmatic selection operations, DUAL Mode: selection state consistency, GUI Mode: interactive selection testing",
        "subtasks": []
      },
      {
        "id": "6",
        "title": "Scatter Plot Operations",
        "description": "Test plot generation without display and verify interactive selection simulation",
        "details": "Test plot generation without display, verify interactive selection simulation, test axis selection and updates, validate export functionality, test performance with large datasets",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "4"
        ],
        "testStrategy": "DEV Mode: headless plot generation, DUAL Mode: plot data consistency, GUI Mode: interactive plot testing",
        "subtasks": []
      },
      {
        "id": "7",
        "title": "Coordinate Calibration Testing",
        "description": "Test two-point calibration in headless mode and verify transformation accuracy",
        "details": "Test two-point calibration in headless, verify transformation accuracy, test calibration dialog interactions, validate template integration, test calibration persistence",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "3"
        ],
        "testStrategy": "DEV Mode: mathematical calibration testing, DUAL Mode: calibration accuracy validation, GUI Mode: user interaction testing",
        "subtasks": []
      },
      {
        "id": "8",
        "title": "Export and Protocol Generation",
        "description": "Test protocol file generation and verify export dialog functionality",
        "details": "Test protocol file generation, verify export dialog functionality, test batch export operations, validate file format compliance, test progress tracking",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "5",
          "6",
          "7"
        ],
        "testStrategy": "DEV Mode: headless export operations, DUAL Mode: export result validation, GUI Mode: interactive export testing",
        "subtasks": []
      },
      {
        "id": "9",
        "title": "Session Management Testing",
        "description": "Test session save/load in both modes and verify auto-session functionality",
        "details": "Test session save/load in both modes, verify auto-session functionality, test crash recovery mechanisms, validate session compatibility, test concurrent session handling",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "8"
        ],
        "testStrategy": "DEV Mode: headless session operations, DUAL Mode: session data consistency, GUI Mode: interactive session management",
        "subtasks": []
      },
      {
        "id": "10",
        "title": "Template System Testing",
        "description": "Test template creation and loading across different modes",
        "details": "Test template creation and loading, verify template application, test template validation, validate template sharing, test version compatibility",
        "status": "pending",
        "priority": "low",
        "dependencies": [
          "9"
        ],
        "testStrategy": "DEV Mode: template processing logic, DUAL Mode: template consistency validation, GUI Mode: template UI interactions",
        "subtasks": []
      },
      {
        "id": "11",
        "title": "Error Handling and Recovery",
        "description": "Test error recovery in headless mode and verify error logging mechanisms",
        "details": "Test error recovery in headless mode, verify error logging mechanisms, test user notification systems, validate data integrity on errors, test fallback operations",
        "status": "pending",
        "priority": "medium",
        "dependencies": [],
        "testStrategy": "DEV Mode: error simulation and recovery, DUAL Mode: error handling consistency, GUI Mode: user error experience",
        "subtasks": []
      },
      {
        "id": "12",
        "title": "Performance Benchmarking",
        "description": "Benchmark operations in both modes and test memory usage patterns",
        "details": "Benchmark operations in both modes, test memory usage patterns, verify threading behavior, test resource cleanup, validate scalability limits",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8"
        ],
        "testStrategy": "DEV Mode: performance metrics collection, DUAL Mode: performance parity validation, GUI Mode: real-world performance testing",
        "subtasks": []
      },
      {
        "id": "13",
        "title": "UI Serialization Testing",
        "description": "Test widget to YAML conversion and verify round-trip editing",
        "details": "Test widget to YAML conversion, verify round-trip editing, test schema validation, validate AI agent compatibility, test version control integration",
        "status": "pending",
        "priority": "low",
        "dependencies": [
          "2"
        ],
        "testStrategy": "DEV Mode: serialization logic testing, DUAL Mode: serialization consistency, GUI Mode: UI-YAML synchronization",
        "subtasks": []
      },
      {
        "id": "14",
        "title": "CLI Tool Integration",
        "description": "Test all CLI commands and verify UI manipulation via CLI",
        "details": "Test all CLI commands, verify UI manipulation via CLI, test batch operations, validate error reporting, test integration with main app",
        "status": "pending",
        "priority": "low",
        "dependencies": [
          "13"
        ],
        "testStrategy": "DEV Mode: CLI command execution, DUAL Mode: CLI-GUI integration, GUI Mode: CLI result verification",
        "subtasks": []
      },
      {
        "id": "15",
        "title": "Cross-Platform Testing",
        "description": "Test on Windows 10/11, Ubuntu/Debian Linux, and macOS",
        "details": "Test on Windows 10/11, Test on Ubuntu/Debian Linux, Test on macOS, verify path handling, test platform-specific features",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "10",
          "11",
          "12",
          "13",
          "14"
        ],
        "testStrategy": "DEV Mode: cross-platform compatibility, DUAL Mode: platform-specific validation, GUI Mode: platform UI testing",
        "subtasks": []
      }
    ],
    "metadata": {
      "created": "2024-12-28",
      "project": "CellSorter Background + GUI Mode Testing",
      "version": "1.0",
      "totalTasks": 15,
      "focus": "현재 기능 안정성과 3모드 테스트 완성도 향상"
    }
  }
}